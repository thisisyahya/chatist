<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <%= roomname %> Chatroom
    </title>
   
    <link
        href="https://fonts.googleapis.com/css2?family=Creepster&family=Orbitron:wght@400..900&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Roboto+Mono:ital,wght@0,100..700;1,100..700&display=swap"
        rel="stylesheet">
        <!-- Remix Icon CDN -->
<link href="https://cdn.jsdelivr.net/npm/remixicon/fonts/remixicon.css" rel="stylesheet">


    <style>
        * {
            padding: 0;
            margin: 0;
            box-sizing: border-box;
        }

        body {
            min-height: 100vh;
            font-family: "Poppins";
        }
  

.room{
    height:100px;
    background-color:#2600ff;
    color:rgb(255, 255, 255);
    display: flex;
    justify-content: center;
    align-items: center;
    padding:0px 20px;
    gap:24px;
}
        .chat{
            display: flex;
            justify-content: space-between;
            height:calc(100vh - 100px);
            width:100vw;
            overflow: hidden;
        }
        .chat-left{
            width:300px;
            padding:20px;
            background-color:rgb(218, 255, 203);
            overflow-y: scroll;
        }
        .joined-users{
            display: flex;
            flex-direction: column;
    
        }
        .joined-user{
          padding:10px 20px;
        }
        .joined-user:nth-child(even){
            background-color: #90ff7a;
        }
        .joined-user:nth-child(odd){
            background-color: #48ff23;
        }
        .players-count{
            background-color: #afff9f;
            width:120px;
            margin-right:auto;
            border-radius: 100px;
            margin-bottom:8px;
            padding:4px 10px;
        }
.online{
    width:8px;
    height:8px;
    border-radius: 100%;
    background-color: #2bff00;
}
        .players {
            font-size:14px;

            color:white;
        }

        /* Chat Container */
        #chat-container {

            width:100vw;
            max-width: calc(100vw - 300px);
            min-height:100%;
            max-height: 600px;
            display: flex;
            flex-direction: column;
            border: 1px solid #ddd;
            border-radius: 10px;
            overflow: hidden;
            background: #fff;
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
            padding: 10px;


        }

        /* Messages Area */
        #messages {
            border-top:1px solid #cccccc5b;
        
            flex: 1;
            overflow-y: auto;
            padding: 10px;
            display: flex;
            flex-direction: column;
            gap: 5px;
            border-bottom: 1px solid #ddd;
            max-height: calc(100% - 60px);
        }

        /* Input Field */
        #message {
            width: calc(100% - 70px);
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            outline: none;
        }

        /* Received Messages */
        .received {
            background: #bbbbbb;
            color: rgb(12, 12, 12);
            word-wrap: break-word;
            font-size: 14px;
            border-radius: 10px;
            padding:4px 10px;
            max-width:fit-content;
            margin-left: auto;
        }

        .sent {
            background: #61ff41;
            color: rgb(36, 36, 36);
            word-wrap: break-word;
            font-size: 14px;
            border-radius: 10px;
            padding:4px 10px;
            max-width:fit-content;
        }

        .message-itself {
            display: flex;
            flex-direction: column;
            gap: 0px;
            border-radius: 10px;
            margin-bottom:8px;
            width:100%;
        }

        .message-sent p {
            font-size: 12px;
    
            color:#666666;
            font-weight: 300;
        }

        .message-received p{
            margin-left: auto;
            font-size: 12px;
    
            color:#666666;
            font-weight: 300;
        }

        .info {
            text-align: center;
            font-size: 12px;
            color: #555;
            background-color: #f1f1f1;
            padding: 8px 12px;
            margin: 5px auto;
            border-radius: 20px;
            width: fit-content;
            max-width: 80%;
            font-weight: bold;
            opacity: 0.9;
        }

        /* Send Button */
        button {
            width: 60px;
            background: #006eff;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            padding: 10px;
            transition: background 0.3s ease;
        }

        button:hover {
            background: #4500b3;
        }

        /* Chat Input Section */
        #chat-container>input,send kr naa

        #chat-container>button {
            margin-top: 10px;
        }

        /* Responsive Design */

        @media(width<=746px){

            .room{
                height:47px;
            }
            .players-count{
                margin: auto;
            }
            .chat{
                height:calc(100vh - 48px);
            }
            .chat-left{
                display: none;
            }
            #chat-container{
                height:100vh;
                max-width:calc(100vw - 0px);
                margin: 0;
                
            }
        }
        @media(width<=448px){
            .chat{
                height:calc(100vh - 68px);            }
        }
    </style>

</head>

<body>

<section class="room">
    <p class="roomid" id="roomid"><%= roomname %></p>
    <i class="ri-file-copy-line copy-btn">(send roomId)</i>
</section>

<script>
    document.querySelector(".copy-btn").addEventListener("click", function() {
        var roomIdText = document.getElementById("roomid").innerText;
          
        // Copy to clipboard
        navigator.clipboard.writeText(`https://dashboard.render.com/selectname?roomname=${roomIdText}`).then(function() {
            alert("Room ID copied: " + roomIdText);
        }).catch(function(err) {
            console.error("Could not copy text: ", err);
        });
    });
</script>

<div class="chat">

    <div class="chat-left">
        <div class="joined-users">
        

        </div>
    </div>

    <div id="chat-container">
       <div class="players-count" style="display: flex; gap:12px; align-items: center;">
        <div class="online"></div>
        <p class="players"></p>
    </div> 

        <div id="messages">

        </div>
        <div class="display:flex; gap:8px;">
        <input type="text" id="message" placeholder="Type your message...">
        <button onclick="sendMessage()">Send</button>
    </div>
    </div>
</div>



<script>
window.addEventListener("beforeunload", function (event) {
  event.preventDefault(); // Required for Chrome
  event.returnValue = ""; // Required for standard behavior

  // Custom confirmation dialog
  const confirmation = confirm("If you reload, you will be disconnected.\n\nDo you want to reload?");

  if (!confirmation) {
    history.pushState(null, "", location.href); // Prevents reload
    throw new Error("Reload prevented"); // Stop further execution
  }
});

</script>





<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.7.2/socket.io.js"></script>
    <script>
        const socket = io();
        const username = "<%= username %>";
        const roomname = "<%= roomname %>";



        socket.emit('joinRoom', { username, roomname });
        console.log(`${username} and ${roomname}`);

        socket.on("welcome", (data) => {
            console.log("Received data:", data); // Debugging line

            let msgDiv = document.createElement("div");
            msgDiv.className = 'info';
            msgDiv.innerHTML = `${data.username} has joined the chat`;
            document.getElementById("messages").appendChild(msgDiv);

            // Fix: Use roomSize instead of players
            document.getElementsByClassName("players")[0].innerHTML = `${data.roomSize} joined`;
           let joinedUsersDiv = document.getElementsByClassName("joined-users")[0];

           joinedUsersDiv.innerHTML="";

           data.usersArray.forEach(userJoined => {
    let userDiv = document.createElement("div"); // Create a new div
    userDiv.classList.add("joined-user"); // Add class to the div
    userDiv.id = userJoined; // Assigns the username as the ID

    let userNameP = document.createElement("p"); // Create a <p> element
    userNameP.classList.add("joined-user-name"); // Add class to the <p>
    userNameP.textContent = userJoined; // Set the text content

    userDiv.appendChild(userNameP); // Add <p> inside div
    joinedUsersDiv.appendChild(userDiv); // Append the div inside .joined-users
});
       



        });

        socket.on('players',(data)=>{
            console.log(data);
        })


        socket.on("disconnected", (data) => {
            let msgDiv = document.createElement("div");
            msgDiv.className = 'info';
            msgDiv.innerHTML = `${data.username} has disconnected the room`;
            document.getElementById("messages").appendChild(msgDiv);

            document.getElementsByClassName("players")[0].innerHTML = `${data.roomSize} joined`;


            let joinedUsersDiv = document.getElementsByClassName("joined-users")[0];

           joinedUsersDiv.innerHTML="";

           data.usersArray.forEach(userJoined => {
    let userDiv = document.createElement("div"); // Create a new div
    userDiv.classList.add("joined-user"); // Add class to the div
    userDiv.id = userJoined; // Assigns the username as the ID

    let userNameP = document.createElement("p"); // Create a <p> element
    userNameP.classList.add("joined-user-name"); // Add class to the <p>
    userNameP.textContent = userJoined; // Set the text content

    userDiv.appendChild(userNameP); // Add <p> inside div
    joinedUsersDiv.appendChild(userDiv); // Append the div inside .joined-users
});

        });


        socket.on("message", (msg) => {
            let msgDiv = document.createElement("div");

            // Compare sender's socket ID with the current user's socket ID
            if (msg.senderId === socket.id) {
                msgDiv.innerHTML = `<div class="message-itself message-sent">

                                        <p>${msg.username}</p>
                          <div class="sent">
                          ${msg.message}
                          </div>

                              </div>`;
            } else {
                msgDiv.innerHTML = `<div class="message-itself message-received">

<p>${msg.username}</p>
<div class="received">
${msg.message}
</div>

</div>`;
            }

            // Format the message properly
    

            document.getElementById("messages").appendChild(msgDiv);

            // Auto-scroll to the latest message
            document.getElementById("messages").scrollTop = document.getElementById("messages").scrollHeight;
        });



        function sendMessage() {
            const message = document.getElementById("message").value;
            if (message.trim()) {
                socket.emit('chatMessage', { username, roomname, message });
                document.getElementById("message").value = "";
            }
        }
    </script>

</body>

</html>
